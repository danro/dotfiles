[
	// common text editing binds
	{ "keys": ["super+d"], "command": "duplicate_line" },
	{ "keys": ["ctrl+d"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Line.sublime-macro"} },
	{ "keys": ["ctrl+c"], "command": "run_macro_file", "args": {"file": "res://Packages/User/macros/Change Line.sublime-macro"} },
	{ "keys": ["super+shift+f"], "command": "show_panel", "args": {"panel": "replace"} },
	{ "keys": ["super+alt+f"], "command": "show_panel", "args": {"panel": "find_in_files"} },
	{ "keys": ["super+v"], "command": "paste_and_indent" },
	{ "keys": ["super+shift+v"], "command": "paste" },
	
	// run js through jshint on each save
	{ "keys": ["super+s"], "command": "build", 
		"context": [ { "key": "selector", "operator": "equal", "operand": "source.js" } ]
	},
	
	// properly indent between HTML tags
	{ "keys": ["enter"], "command": "run_macro_file",
		"args": {"file": "res://Packages/User/macros/Tag Indent.sublime-macro"},
		"context": [ { "key": "selector", "operator": "equal", "operand": "meta.scope.between-tag-pair.html" } ]
	},
	
	// run default build system
	{ "keys": ["super+r"], "command": "build" },
	
	// add layout pane
	{ "keys": ["ctrl+a"], "command": "new_pane", "args": {"move": true} },
	
	// expand selection
	{ "keys": ["super+alt+g"], "command": "find_under_expand" },
	{ "keys": ["super+alt+b"], "command": "find_under_expand_skip" },
		
	// goto file / command palette / switch project
	{ "keys": ["super+t"], "command": "show_overlay", "args": {"overlay": "goto", "show_files": true} },
	{ "keys": ["alt+t"], "command": "show_overlay", "args": {"overlay": "goto", "text": "@"} },
	{ "keys": ["super+p"], "command": "show_overlay", "args": {"overlay": "command_palette"} },
	{ "keys": ["super+shift+p"], "command": "prompt_select_project" },
	
	// goto line number
	{ "keys": ["super+l"], "command": "show_overlay", "args": {"overlay": "goto", "text": ":"} },
	
	// toggle sidebar
	{ "keys": ["ctrl+s"], "command": "toggle_side_bar" },
	
	// expand selection to scope (or tag in html/xml)
	{ "keys": ["ctrl+space"], "command": "expand_selection", "args": {"to": "scope"} },
	{ "keys": ["ctrl+space"], "command": "expand_selection", "args": {"to": "tag"}, "context":
		[
			{ "key": "selector", "operator": "equal", "match_all": true, "operand": "text.html, text.xml" },
			{ "key": "selector", "operator": "not_equal", "operand": "string" }
		]
	},
		
	// snippet commands
	{ "keys": ["ctrl+j"], "command": "insert_snippet", "args":
		{"name": "Packages/User/snippets/js-$jquery.sublime-snippet"}
	},
	{ "keys": ["ctrl+/"], "command": "insert_snippet", "args":
		{"name": "Packages/User/snippets/php-?-tag.sublime-snippet"}
	},
	{ "keys": ["ctrl+alt+/"], "command": "insert_snippet", "args":
		{"name": "Packages/User/snippets/php-?-comment.sublime-snippet"}
	},
	{ "keys": ["ctrl+i"], "command": "insert_snippet", "args":
		{"name": "Packages/User/snippets/js-inspect.sublime-snippet"}
	},
	{ "keys": ["ctrl+l"], "command": "insert_snippet", "args":
		{"name": "Packages/User/snippets/js-console-log.sublime-snippet"}
	},
	{ "keys": ["ctrl+p"], "command": "insert_snippet", "args":
		{"name": "Packages/User/snippets/js-parse-int-10.sublime-snippet"}
	},
	{ "keys": ["ctrl+enter"], "command": "insert_snippet", "args": {"contents": "<br>"}},
	
	// insert semicolon macro
	{ "keys": ["super+;"], "command": "run_macro_file", "args": {"file": "res://Packages/User/macros/Semicolon.sublime-macro"} },
	
	// zen coding (emmet) remaps
	{
		"keys": ["ctrl+w"],
		"command": "expand_as_you_type", 
		"context": [
			{
				"operand": false, 
				"operator": "equal", 
				"match_all": true, 
				"key": "setting.is_widget"
			}, 
			{
				"match_all": true, 
				"key": "emmet_action_enabled.expand_as_you_type"
			}
		]
	},
	{
		"keys": ["ctrl+q"],
		"args": {
			"action": "remove_tag"
		}, 
		"command": "run_emmet_action", 
		"context": [
			{
				"key": "emmet_action_enabled.remove_tag"
			}
		]
	},
	
	// wrap tag around selection (temp replacement for emmet)
	// { "keys": ["ctrl+w"], "command": "insert_snippet", "args": { "name": "Packages/XML/long-tag.sublime-snippet" } },
	
	// surroundings
	{ "keys": ["ctrl+shift+s"], "command": "add_surround" },
	{ "keys": ["ctrl+shift+d"], "command": "delete_surround" },
	{ "keys": ["ctrl+shift+c"], "command": "replace_surround" },
	{ "keys": ["ctrl+'"], "command": "quotes_to_single" },
	{ "keys": ["ctrl+shift+'"], "command": "quotes_to_double" },
	
	// copy expanded file or text to clipboard (broken in ST3)
	// { "keys": ["super+shift+c"], "command": "copy_expanded" },
	
	// spaces to tabs
	{ "keys": ["super+."], "command": "unexpand_tabs", "args": {"set_translate_tabs": true} },
	
	// move tabs to group
	{ "keys": ["super+1"], "command": "move_to_group", "args": { "group": 0 } },
	{ "keys": ["super+2"], "command": "move_to_group", "args": { "group": 1 } },
	{ "keys": ["super+3"], "command": "move_to_group", "args": { "group": 2 } },
	{ "keys": ["super+4"], "command": "move_to_group", "args": { "group": 3 } },
	
	// disable ":" snippets
	{ "keys": [":"], "command": "insert_snippet", "args": {"contents": ":"} },
	
	// css important snippet
	{ "keys": ["!"], "command": "insert_snippet", "args": {"contents": "!important"}, "context":
		[{"operand": "source.css, source.scss", "operator": "equal", "match_all": true, "key": "selector"} ]
	},
	
	// disabled keys
	{ "keys": ["f5"], "command": "noop" }
]
